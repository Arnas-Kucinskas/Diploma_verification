@page "/check_diploma_validity"
@using BlazorInputFile
@using Nethereum.Metamask.Blazor.Server.Classes;
@using Nethereum.Metamask.Blazor.Server.DB_Models;
@using Nethereum.Metamask.Blazor.Server.DAL;
@inject DiplomaService objDiplomaService;

<h1>Diploma verification</h1>

<p>A single file input that uploads automatically on file selection</p>


<table class="table">
    <thead>
        <tr>
            <th>
                <label for="Name" class="control-label"></label>
                Enter given ID <input form="Name" class="form-control" @bind="@diplomaUserID" />
            </th>
            <th>OR</th>
            <th>
                Choose a file <br />
                <InputFile OnChange="HandleSelection" />
            </th>
        </tr>
    </thead>
</table>

@if (status != null)
{
    <a>Doccument hash: @hash</a>
    <a class="nav-link" href="@linkToExplorer">
        <span class="oi oi-pencil" aria-hidden="true"></span> @linkToExplorer
    </a>
}


@code {
    string status;
    string linkToExplorer;
    string diplomaUserID;
    string verificationText;
    string hash;

    async Task SearchWithID()
    {

    }
    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            MemoryStream ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            ms.Position = 0;
            PDF pdf = new PDF();
            hash = pdf.GetHashSha256(ms);

            //Get diploma based on hash
            Diploma_model diploma = objDiplomaService.GetDiplomaByHash(hash);
            if (diploma != null)
            {
                verificationText = "Document is verified. Link to transaction:";
                linkToExplorer = $"https://ropsten.etherscan.io/tx/{diploma.transactionHash}";
                //linkToExplorer = "file:\\\\DESKTOP-6QJ1MGC\\Share\\PDF";

            }
            else
            {
                verificationText = "Document is not verified";
            }
            status = $"Finished loading {file.Size} bytes from {file.Name} hash {hash}";
        }
    }
}
